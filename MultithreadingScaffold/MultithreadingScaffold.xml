<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MultithreadingScaffold</name>
    </assembly>
    <members>
        <member name="T:MultithreadingScaffold.MTScaffold">
            <summary>
            多线程工作脚手架，用于快速的创建多线程工作的代码
            </summary>
        </member>
        <member name="T:MultithreadingScaffold.MTScaffold.ThreadWorker">
            <summary>
            用于多线程工作执行的委托
            </summary>
        </member>
        <member name="T:MultithreadingScaffold.MTScaffold.ThreadFinal">
            <summary>
            用于多线程工作完毕后的最终操作，超时重试结束时也会触发此函数
            </summary>
        </member>
        <member name="F:MultithreadingScaffold.MTScaffold.Worker">
            <summary>
            工作的线程
            </summary>
        </member>
        <member name="F:MultithreadingScaffold.MTScaffold.Final">
            <summary>
            工作结束时调用
            </summary>
        </member>
        <member name="F:MultithreadingScaffold.MTScaffold.Workload">
            <summary>
            工作量，用于判断多少个线程工作完毕后算作总任务结束
            </summary>
        </member>
        <member name="F:MultithreadingScaffold.MTScaffold.InNewThread">
            <summary>
            是否开启新线程作为调度线程，若为false则会阻塞当前线程
            </summary>
        </member>
        <member name="F:MultithreadingScaffold.MTScaffold.Locker">
            <summary>
            指定作为锁的一个对象，若不指定则会自动创建一个Object作为锁
            </summary>
        </member>
        <member name="F:MultithreadingScaffold.MTScaffold.WriteConsole">
            <summary>
            是否打印和线程工作相关的信息，默认关闭
            </summary>
        </member>
        <member name="F:MultithreadingScaffold.MTScaffold.ThreadLimit">
            <summary>
            最大线程数，若不指定或指定为0则会根据系统CPU核心数自动调整
            </summary>
        </member>
        <member name="F:MultithreadingScaffold.MTScaffold.SleepTime">
            <summary>
            启动线程的睡眠时间，影响每次启动新线程的间隔，默认100
            </summary>
        </member>
        <member name="F:MultithreadingScaffold.MTScaffold.TTL">
            <summary>
            整个MTScaffold对象的存活时间，超出这个时间将停止所有线程，单位秒，默认值为-1即不开启
            </summary>
        </member>
        <member name="F:MultithreadingScaffold.MTScaffold.ThreadCount">
            <summary>
            线程计数器，用于判断是否可以启动新线程
            </summary>
        </member>
        <member name="F:MultithreadingScaffold.MTScaffold.Counter">
            <summary>
            已启动线程计数器，用于判断是否可以结束全部任务
            </summary>
        </member>
        <member name="F:MultithreadingScaffold.MTScaffold.StartTime">
            <summary>
            整个MTScaffold对象的启动时间
            </summary>
        </member>
        <member name="F:MultithreadingScaffold.MTScaffold.ls_thread">
            <summary>
            存储所有线程对象的List
            </summary>
        </member>
        <member name="M:MultithreadingScaffold.MTScaffold.ThreadWorking">
            <summary>
            实际工作线程
            </summary>
        </member>
        <member name="M:MultithreadingScaffold.MTScaffold.CallThreadWorking">
            <summary>
            调用线程
            </summary>
        </member>
        <member name="M:MultithreadingScaffold.MTScaffold.StartThreadWorking">
            <summary>
            调用线程，启动所有的多线程工作
            </summary>
        </member>
        <member name="M:MultithreadingScaffold.MTScaffold.LogOut(System.String)">
            <summary>
            输出LOG
            </summary>
            <param name="str"></param>
        </member>
    </members>
</doc>
